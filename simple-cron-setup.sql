-- 🔥 简化的定时任务设置
-- 使用 pg_cron 扩展自动触发RSS抓取

-- 首先创建一个简单的触发函数
CREATE OR REPLACE FUNCTION trigger_rss_fetch()
RETURNS void AS $$
BEGIN
    -- 记录触发时间
    INSERT INTO rss_fetch_logs (triggered_at, status) 
    VALUES (NOW(), 'triggered');
    
    -- 更新RSS源的最后触发时间
    UPDATE rss_sources 
    SET last_fetch_time = NOW() 
    WHERE is_active = true;
    
    -- 这里可以添加更多逻辑，比如调用Edge Function
END;
$$ LANGUAGE plpgsql;

-- 创建日志表
CREATE TABLE IF NOT EXISTS rss_fetch_logs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    triggered_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    status TEXT,
    message TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 🔥 设置简单的定时任务 - 每天上午9点
-- 注意：这个需要在Supabase控制台中手动设置
-- 或者使用 GitHub Actions 作为外部定时器

-- 查看现有的定时任务
SELECT * FROM cron.job WHERE jobname LIKE '%rss%';

-- 清理旧的定时任务
DO $$
DECLARE
    job_record RECORD;
BEGIN
    FOR job_record IN SELECT jobname FROM cron.job WHERE jobname LIKE '%rss%' LOOP
        PERFORM cron.unschedule(job_record.jobname);
    END LOOP;
END $$;

-- 🔥 创建主定时任务 - 每小时执行一次RSS抓取
SELECT cron.schedule(
    'auto-rss-fetch',
    '0 */6 * * *',  -- 每6小时执行一次
    'SELECT trigger_rss_fetch();'
);

-- 验证定时任务已创建
SELECT jobname, schedule, command, active, nodename FROM cron.job WHERE jobname = 'auto-rss-fetch';